{"ast":null,"code":"/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport { stringifyPosition } from 'unist-util-stringify-position';\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null];\n    /** @type {Position} */\n    var position = {\n      start: {\n        line: null,\n        column: null\n      },\n      end: {\n        line: null,\n        column: null\n      }\n    };\n    /** @type {number} */\n    var index;\n    super();\n    if (typeof place === 'string') {\n      origin = place;\n      place = null;\n    }\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':');\n      if (index === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index);\n        parts[1] = origin.slice(index + 1);\n      }\n    }\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position;\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place;\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place;\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1';\n    this.message = typeof reason === 'object' ? reason.message : reason;\n    this.stack = typeof reason === 'object' ? reason.stack : '';\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message;\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line;\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column;\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0];\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1];\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position;\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file;\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal;\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url;\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note;\n    /* eslint-enable no-unused-expressions */\n  }\n}\nVFileMessage.prototype.file = '';\nVFileMessage.prototype.name = '';\nVFileMessage.prototype.reason = '';\nVFileMessage.prototype.message = '';\nVFileMessage.prototype.stack = '';\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;","map":{"version":3,"names":["stringifyPosition","VFileMessage","Error","constructor","reason","place","origin","parts","position","start","line","column","end","index","indexOf","slice","name","message","stack","source","ruleId","file","fatal","url","note","prototype"],"sources":["C:/Users/natus/Desktop/Reliquest Assessment/ui-assessment-pokedex-snr/node_modules/vfile-message/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}