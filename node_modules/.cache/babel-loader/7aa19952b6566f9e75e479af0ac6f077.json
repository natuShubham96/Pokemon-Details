{"ast":null,"code":"/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start');\nexport var pointEnd = point('end');\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {\n    start: pointStart(node),\n    end: pointEnd(node)\n  };\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point;\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = node && node.position && node.position[type] || {};\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    };\n  }\n}","map":{"version":3,"names":["pointStart","point","pointEnd","position","node","start","end","type","line","column","offset"],"sources":["C:/Users/natus/Desktop/Reliquest Assessment/ui-assessment-pokedex-snr/node_modules/unist-util-position/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start')\nexport var pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIA,UAAU,GAAGC,KAAK,CAAC,OAAO,CAAC;AACtC,OAAO,IAAIC,QAAQ,GAAGD,KAAK,CAAC,KAAK,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,QAAQA,CAACC,IAAI,EAAE;EAC7B,OAAO;IAACC,KAAK,EAAEL,UAAU,CAACI,IAAI,CAAC;IAAEE,GAAG,EAAEJ,QAAQ,CAACE,IAAI;EAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASH,KAAKA,CAACM,IAAI,EAAE;EACnB,OAAON,KAAK;;EAEZ;AACF;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAACG,IAAI,EAAE;IACnB;IACA;IACA,IAAIH,KAAK,GAAIG,IAAI,IAAIA,IAAI,CAACD,QAAQ,IAAIC,IAAI,CAACD,QAAQ,CAACI,IAAI,CAAC,IAAK,CAAC,CAAC;IAEhE,OAAO;MACLC,IAAI,EAAEP,KAAK,CAACO,IAAI,IAAI,IAAI;MACxBC,MAAM,EAAER,KAAK,CAACQ,MAAM,IAAI,IAAI;MAC5BC,MAAM,EAAET,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,GAAGT,KAAK,CAACS,MAAM,GAAG;IAC7C,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}