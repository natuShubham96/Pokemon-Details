{"ast":null,"code":"import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  const originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n  return new GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}","map":{"version":3,"names":["inspect","GraphQLError","locatedError","rawOriginalError","nodes","path","_nodes","originalError","Error","isLocatedGraphQLError","message","source","positions","error","Array","isArray"],"sources":["C:/Users/natus/Desktop/Reliquest Assessment/ui-assessment-pokedex-snr/node_modules/graphql/error/locatedError.mjs"],"sourcesContent":["import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  const originalError =\n    rawOriginalError instanceof Error\n      ? rawOriginalError\n      : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new GraphQLError(\n    originalError.message,\n    (_nodes = originalError.nodes) !== null && _nodes !== void 0\n      ? _nodes\n      : nodes,\n    originalError.source,\n    originalError.positions,\n    path,\n    originalError,\n  );\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAACC,gBAAgB,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC1D,IAAIC,MAAM;;EAEV;EACA,MAAMC,aAAa,GACjBJ,gBAAgB,YAAYK,KAAK,GAC7BL,gBAAgB,GAChB,IAAIK,KAAK,CAAC,0BAA0B,GAAGR,OAAO,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAEzE,IAAIM,qBAAqB,CAACF,aAAa,CAAC,EAAE;IACxC,OAAOA,aAAa;EACtB;EAEA,OAAO,IAAIN,YAAY,CACrBM,aAAa,CAACG,OAAO,EACrB,CAACJ,MAAM,GAAGC,aAAa,CAACH,KAAK,MAAM,IAAI,IAAIE,MAAM,KAAK,KAAK,CAAC,GACxDA,MAAM,GACNF,KAAK,EACTG,aAAa,CAACI,MAAM,EACpBJ,aAAa,CAACK,SAAS,EACvBP,IAAI,EACJE,aACF,CAAC;AACH;AAEA,SAASE,qBAAqBA,CAACI,KAAK,EAAE;EACpC,OAAOC,KAAK,CAACC,OAAO,CAACF,KAAK,CAACR,IAAI,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module"}