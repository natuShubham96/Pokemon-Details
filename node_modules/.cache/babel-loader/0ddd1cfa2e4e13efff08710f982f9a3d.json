{"ast":null,"code":"var _s = $RefreshSig$();\nimport { gql, useQuery } from \"@apollo/react-hooks\";\nexport const GET_POKEMON_DETAILS = gql`\nquery pokemon($id: String, $name: String){\n  pokemon(id: $id, name: $name){\n    id\n    number\n    name\n    weight{\n      minimum\n      maximum\n    }\n    height{\n      minimum\n      maximum\n    }\n    classification\n    types\n    resistant\n    weaknesses\n    fleeRate\n    maxCP\n    maxHP\n    image\n  }\n}\n`;\nexport const useGetPokemonDetails = (pokemonId, pokemonName) => {\n  _s();\n  const {\n    data,\n    ...queryRes\n  } = useQuery(GET_POKEMON_DETAILS, {\n    variables: {\n      id: pokemonId,\n      name: pokemonName\n    }\n  });\n  console.log(\"useGetPokemons\", data);\n\n  // const pokemons: Pokemon[] = useMemo(() => data?.pokemons || [], [data]);\n\n  // const pokemonOptions: PokemonOption[] = useMemo(\n  //   () => pokemons.map((p: Pokemon) => ({ value: p.id, label: p.name })),\n  //   [pokemons]\n  // );\n\n  // return {\n  //   pokemons,\n  //   pokemonOptions,\n  //   ...queryRes,\n  // };\n};\n_s(useGetPokemonDetails, \"gsEAIdIi0+N//4dbu7TBCK8RV/U=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["gql","useQuery","GET_POKEMON_DETAILS","useGetPokemonDetails","pokemonId","pokemonName","_s","data","queryRes","variables","id","name","console","log"],"sources":["C:/Users/natus/Desktop/Reliquest Assessment/ui-assessment-pokedex-snr/src/hooks/useGetPokemonDetails.ts"],"sourcesContent":["import { gql, useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport const GET_POKEMON_DETAILS = gql`\r\nquery pokemon($id: String, $name: String){\r\n  pokemon(id: $id, name: $name){\r\n    id\r\n    number\r\n    name\r\n    weight{\r\n      minimum\r\n      maximum\r\n    }\r\n    height{\r\n      minimum\r\n      maximum\r\n    }\r\n    classification\r\n    types\r\n    resistant\r\n    weaknesses\r\n    fleeRate\r\n    maxCP\r\n    maxHP\r\n    image\r\n  }\r\n}\r\n`;\r\n\r\nexport const useGetPokemonDetails = (pokemonId: string, pokemonName: string) => {\r\n    const { data, ...queryRes } = useQuery(GET_POKEMON_DETAILS, {\r\n      variables: {\r\n        id: pokemonId,\r\n        name: pokemonName,\r\n      },\r\n    });\r\n  \r\n    console.log(\"useGetPokemons\", data)\r\n  \r\n    // const pokemons: Pokemon[] = useMemo(() => data?.pokemons || [], [data]);\r\n\r\n    // const pokemonOptions: PokemonOption[] = useMemo(\r\n    //   () => pokemons.map((p: Pokemon) => ({ value: p.id, label: p.name })),\r\n    //   [pokemons]\r\n    // );\r\n  \r\n    // return {\r\n    //   pokemons,\r\n    //   pokemonOptions,\r\n    //   ...queryRes,\r\n    // };\r\n  };"],"mappings":";AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,qBAAqB;AAEnD,OAAO,MAAMC,mBAAmB,GAAGF,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAGA,CAACC,SAAiB,EAAEC,WAAmB,KAAK;EAAAC,EAAA;EAC5E,MAAM;IAAEC,IAAI;IAAE,GAAGC;EAAS,CAAC,GAAGP,QAAQ,CAACC,mBAAmB,EAAE;IAC1DO,SAAS,EAAE;MACTC,EAAE,EAAEN,SAAS;MACbO,IAAI,EAAEN;IACR;EACF,CAAC,CAAC;EAEFO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,IAAI,CAAC;;EAEnC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACD,EAAA,CAtBSH,oBAAoB;EAAA,QACCF,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}